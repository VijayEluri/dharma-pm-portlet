/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.dharma.model.impl;

import com.dharma.model.PMDeletedMessage;
import com.dharma.model.PMDeletedMessageModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the PMDeletedMessage service. Represents a row in the &quot;deleted_message&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.dharma.model.PMDeletedMessageModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PMDeletedMessageImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a p m deleted message model instance should use the {@link com.dharma.model.PMDeletedMessage} interface instead.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PMDeletedMessageImpl
 * @see com.dharma.model.PMDeletedMessage
 * @see com.dharma.model.PMDeletedMessageModel
 * @generated
 */
public class PMDeletedMessageModelImpl extends BaseModelImpl<PMDeletedMessage>
	implements PMDeletedMessageModel {
	public static final String TABLE_NAME = "deleted_message";
	public static final Object[][] TABLE_COLUMNS = {
			{ "deletedMessageId", new Integer(Types.BIGINT) },
			{ "messageId", new Integer(Types.BIGINT) },
			{ "ownerId", new Integer(Types.BIGINT) },
			{ "deletedDate", new Integer(Types.TIMESTAMP) }
		};
	public static final String TABLE_SQL_CREATE = "create table deleted_message (deletedMessageId LONG not null primary key,messageId LONG,ownerId LONG,deletedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table deleted_message";
	public static final String ORDER_BY_JPQL = " ORDER BY pmDeletedMessage.deletedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY deleted_message.deletedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.dharma.model.PMDeletedMessage"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.dharma.model.PMDeletedMessage"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.dharma.model.PMDeletedMessage"));

	public PMDeletedMessageModelImpl() {
	}

	public long getPrimaryKey() {
		return _deletedMessageId;
	}

	public void setPrimaryKey(long pk) {
		setDeletedMessageId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_deletedMessageId);
	}

	public long getDeletedMessageId() {
		return _deletedMessageId;
	}

	public void setDeletedMessageId(long deletedMessageId) {
		_deletedMessageId = deletedMessageId;
	}

	public long getMessageId() {
		return _messageId;
	}

	public void setMessageId(long messageId) {
		_messageId = messageId;
	}

	public long getOwnerId() {
		return _ownerId;
	}

	public void setOwnerId(long ownerId) {
		_ownerId = ownerId;
	}

	public Date getDeletedDate() {
		return _deletedDate;
	}

	public void setDeletedDate(Date deletedDate) {
		_deletedDate = deletedDate;
	}

	public PMDeletedMessage toEscapedModel() {
		if (isEscapedModel()) {
			return (PMDeletedMessage)this;
		}
		else {
			return (PMDeletedMessage)Proxy.newProxyInstance(PMDeletedMessage.class.getClassLoader(),
				new Class[] { PMDeletedMessage.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					PMDeletedMessage.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		PMDeletedMessageImpl clone = new PMDeletedMessageImpl();

		clone.setDeletedMessageId(getDeletedMessageId());
		clone.setMessageId(getMessageId());
		clone.setOwnerId(getOwnerId());
		clone.setDeletedDate(getDeletedDate());

		return clone;
	}

	public int compareTo(PMDeletedMessage pmDeletedMessage) {
		int value = 0;

		value = DateUtil.compareTo(getDeletedDate(),
				pmDeletedMessage.getDeletedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		PMDeletedMessage pmDeletedMessage = null;

		try {
			pmDeletedMessage = (PMDeletedMessage)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = pmDeletedMessage.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{deletedMessageId=");
		sb.append(getDeletedMessageId());
		sb.append(", messageId=");
		sb.append(getMessageId());
		sb.append(", ownerId=");
		sb.append(getOwnerId());
		sb.append(", deletedDate=");
		sb.append(getDeletedDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.dharma.model.PMDeletedMessage");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>deletedMessageId</column-name><column-value><![CDATA[");
		sb.append(getDeletedMessageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>messageId</column-name><column-value><![CDATA[");
		sb.append(getMessageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ownerId</column-name><column-value><![CDATA[");
		sb.append(getOwnerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deletedDate</column-name><column-value><![CDATA[");
		sb.append(getDeletedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _deletedMessageId;
	private long _messageId;
	private long _ownerId;
	private Date _deletedDate;
	private transient ExpandoBridge _expandoBridge;
}